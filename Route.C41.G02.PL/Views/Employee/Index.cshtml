@model IEnumerable<Empolyee>

@{
    ViewData["Title"] = "Index";

    string ViewDataMessage = ViewData["Message"] as string; // Compiler Enforces Type Safety => Requires Type Conversion [Stronglty Typed]
    string ViewBagMessage = ViewBag.Message; // Can Not Enforce Type Safety => No Required Type Conversion [Weakly Typed]
}

@if(!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="alert alert-primary">
        @TempData["Message"]
    </div>
}


@* <div class="alert alert-warning">

    @ViewData["Message"]
</div>

<div class="alert alert-success">
    @ViewBag.Message
</div> *@

<h1>All Employees</h1>
<br />
<br />

<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create New Employee</a>

<br />

<div class="row justify-content-center  align-items-center mt-5">

    <form asp-action="Index" class="row col-8 offset-2" >
        <div class="col-8">

            <input type="text" class="form-control" name="SearchInp" placeholder="Search By Name" />
        </div>

        <div class="col-4">

            <input type="submit" value="Search" class="btn btn-success"/>
        </div>



    </form>


</div>




@if (Model.Count() > 0)
{
    <table class="mt-4 table table-striped table-hover">

        <thead>

            <tr>
                <th>@Html.DisplayNameFor(D => D.Name)</th>
                <th>@Html.DisplayNameFor(D => D.Age)</th>
                <th>@Html.DisplayNameFor(D => D.Department)</th>
                <th>@Html.DisplayNameFor(D => D.Salary)</th>
                <th>@Html.DisplayNameFor(D => D.IsActive)</th>
                <th>@Html.DisplayNameFor(D => D.Genderr)</th>
                <th>@Html.DisplayNameFor(D => D.Email)</th>
                @* <th>@Html.DisplayNameFor(D=>D.Address)</th> *@
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>

        </thead>
        <tbody>
            @foreach (var empolyee in Model)
            {
                <tr>
                    <td>@empolyee.Name</td>
                    <td>@empolyee.Age</td>
                    <td>@empolyee.Department?.Name</td>
                    <td>@Html.DisplayFor(M => empolyee.Salary)</td>
                    <td>@Html.DisplayFor(M => empolyee.IsActive)</td>
                    <td>@empolyee.Genderr</td>
                    <td>@Html.DisplayFor(M => empolyee.Email)</td>

                    <partial name="_ButtonsPartial" model="@empolyee.Id" />






                </tr>
            }
        </tbody>

    </table>
}
else
{
    <div class="mt-3 alert alert-warning">
        <h3>There Are No Employees :(</h3>
    </div>
}




